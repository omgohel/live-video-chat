<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Set the ROOM_ID variable to the roomId that is passed in by server.js -->
    <script>
        const ROOM_ID = "<%= roomId %>"
    </script>
    <!-- CDN in the peerJS and socket.io libraries -->
    <script defer src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script src = "/socket.io/socket.io.js" defer></script>
    <!-- Load in script.js, our client-side script -->
    <script src = "script.js" defer></script>
    <title>VideoConnect - Premium Video Calls</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --dark-bg: #1a1a2e;
            --darker-bg: #16213e;
            --accent-blue: #4facfe;
            --accent-purple: #00f2fe;
            --glass-bg: rgba(255, 255, 255, 0.1);
            --glass-border: rgba(255, 255, 255, 0.2);
            --shadow-glow: 0 8px 32px rgba(31, 38, 135, 0.37);
            --text-primary: #ffffff;
            --text-secondary: rgba(255, 255, 255, 0.8);
        }

        body {
            font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--dark-bg);
            background-image: 
                radial-gradient(circle at 20% 50%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 40% 80%, rgba(120, 200, 255, 0.3) 0%, transparent 50%);
            min-height: 100vh;
            overflow: hidden;
            position: relative;
        }

        /* Animated background particles */
        .bg-particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .particle {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 6s ease-in-out infinite;
        }

        .particle:nth-child(1) { width: 8px; height: 8px; left: 10%; animation-delay: 0s; }
        .particle:nth-child(2) { width: 12px; height: 12px; left: 20%; animation-delay: 1s; }
        .particle:nth-child(3) { width: 6px; height: 6px; left: 30%; animation-delay: 2s; }
        .particle:nth-child(4) { width: 10px; height: 10px; left: 40%; animation-delay: 1.5s; }
        .particle:nth-child(5) { width: 14px; height: 14px; left: 50%; animation-delay: 0.5s; }
        .particle:nth-child(6) { width: 8px; height: 8px; left: 60%; animation-delay: 2.5s; }
        .particle:nth-child(7) { width: 12px; height: 12px; left: 70%; animation-delay: 1.8s; }
        .particle:nth-child(8) { width: 6px; height: 6px; left: 80%; animation-delay: 0.8s; }
        .particle:nth-child(9) { width: 10px; height: 10px; left: 90%; animation-delay: 2.2s; }

        @keyframes float {
            0%, 100% { transform: translateY(100vh) scale(1); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            50% { transform: translateY(-20px) scale(1.1); }
        }

        /* Header */
        .header {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            background: rgba(26, 26, 46, 0.9);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--glass-border);
            padding: 1rem 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 1.5rem;
            font-weight: 700;
            background: var(--primary-gradient);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .room-info {
            display: flex;
            align-items: center;
            gap: 1rem;
            color: var(--text-secondary);
        }

        .room-id {
            background: var(--glass-bg);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            border: 1px solid var(--glass-border);
            font-family: 'Courier New', monospace;
            font-size: 0.9rem;
        }

        .participants-count {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            background: rgba(79, 172, 254, 0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            border: 1px solid rgba(79, 172, 254, 0.3);
        }

        /* Main container */
        .container {
            position: relative;
            z-index: 1;
            padding-top: 80px;
            height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Video grid */
        #video-grid {
            flex: 1;
            display: grid;
            gap: 1rem;
            padding: 1rem;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            grid-auto-rows: minmax(240px, 1fr);
            max-height: calc(100vh - 160px);
            overflow-y: auto;
        }

        /* Dynamic grid layouts */
        #video-grid.single-user {
            grid-template-columns: 1fr;
            grid-template-rows: 1fr;
        }

        #video-grid.two-users {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr;
        }

        #video-grid.three-users {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
        }

        #video-grid.four-users {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: 1fr 1fr;
        }

        /* Video container */
        .video-container {
            position: relative;
            background: var(--glass-bg);
            border-radius: 20px;
            overflow: hidden;
            border: 1px solid var(--glass-border);
            box-shadow: var(--shadow-glow);
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .video-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(79, 172, 254, 0.3);
            border-color: rgba(79, 172, 254, 0.5);
        }

        .video-container video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 20px;
        }

        /* Video overlay */
        .video-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: linear-gradient(transparent, rgba(0, 0, 0, 0.8));
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .video-container:hover .video-overlay {
            opacity: 1;
        }

        .user-name {
            font-weight: 600;
            font-size: 0.9rem;
        }

        .video-controls {
            display: flex;
            gap: 0.5rem;
        }

        .control-btn {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: none;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .control-btn:hover {
            background: var(--accent-blue);
            transform: scale(1.1);
        }

        /* Control panel */
        .control-panel {
            position: fixed;
            bottom: 2rem;
            left: 50%;
            transform: translateX(-50%);
            z-index: 1000;
            display: flex;
            gap: 1rem;
            background: var(--glass-bg);
            backdrop-filter: blur(20px);
            padding: 1rem 2rem;
            border-radius: 25px;
            border: 1px solid var(--glass-border);
            box-shadow: var(--shadow-glow);
        }

        .control-panel-btn {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            border: none;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            position: relative;
            overflow: hidden;
        }

        .control-panel-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: var(--primary-gradient);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .control-panel-btn:hover::before {
            opacity: 1;
        }

        .control-panel-btn i {
            position: relative;
            z-index: 1;
            color: white;
        }

        .mic-btn { background: #4CAF50; }
        .mic-btn.muted { background: #f44336; }
        .camera-btn { background: #2196F3; }
        .camera-btn.off { background: #f44336; }
        .screen-btn { background: #FF9800; }
        .screen-btn.active { background: #4CAF50; }
        .leave-btn { background: #f44336; }

        .control-panel-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        /* Status indicators */
        .status-indicator {
            position: absolute;
            top: 1rem;
            right: 1rem;
            display: flex;
            gap: 0.5rem;
        }

        .status-dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #4CAF50;
            animation: pulse 2s infinite;
        }

        .status-dot.muted {
            background: #f44336;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        /* Loading animation */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(26, 26, 46, 0.9);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 2000;
            backdrop-filter: blur(10px);
        }

        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 3px solid rgba(255, 255, 255, 0.1);
            border-top: 3px solid var(--accent-blue);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-bottom: 1rem;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .loading-text {
            color: var(--text-primary);
            font-size: 1.1rem;
            font-weight: 500;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .header {
                padding: 1rem;
            }
            
            .room-info {
                gap: 0.5rem;
            }
            
            .room-id {
                font-size: 0.8rem;
                padding: 0.4rem 0.8rem;
            }
            
            #video-grid {
                grid-template-columns: 1fr;
                padding: 0.5rem;
                gap: 0.5rem;
            }
            
            .control-panel {
                bottom: 1rem;
                padding: 0.8rem 1.5rem;
                gap: 0.8rem;
            }
            
            .control-panel-btn {
                width: 45px;
                height: 45px;
                font-size: 1rem;
            }
        }

        /* Custom scrollbar */
        #video-grid::-webkit-scrollbar {
            width: 8px;
        }

        #video-grid::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 4px;
        }

        #video-grid::-webkit-scrollbar-thumb {
            background: var(--primary-gradient);
            border-radius: 4px;
        }

        #video-grid::-webkit-scrollbar-thumb:hover {
            background: var(--secondary-gradient);
        }
    </style>
</head>
<body>
    <!-- Animated background particles -->
    <div class="bg-particles">
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
        <div class="particle"></div>
    </div>

    <!-- Header -->
    <header class="header">
        <div class="logo">
            <i class="fas fa-video"></i>
            VideoConnect
        </div>
        <div class="room-info">
            <div class="room-id">
                <i class="fas fa-key"></i>
                Room: <span id="room-display"><%= roomId %></span>
            </div>
            <div class="participants-count">
                <i class="fas fa-users"></i>
                <span id="participant-count">1</span> participant(s)
            </div>
        </div>
    </header>

    <!-- Main container -->
    <div class="container">
        <!-- Video grid -->
        <div id="video-grid" class="single-user"></div>
    </div>

    <!-- Control panel -->
    <div class="control-panel">
        <button class="control-panel-btn mic-btn" id="mic-toggle" title="Toggle Microphone">
            <i class="fas fa-microphone"></i>
        </button>
        <button class="control-panel-btn camera-btn" id="camera-toggle" title="Toggle Camera">
            <i class="fas fa-video"></i>
        </button>
        <button class="control-panel-btn screen-btn" id="screen-share" title="Share Screen">
            <i class="fas fa-desktop"></i>
        </button>
        <button class="control-panel-btn leave-btn" id="leave-call" title="Leave Call">
            <i class="fas fa-phone-slash"></i>
        </button>
    </div>

    <!-- Loading overlay -->
    <div class="loading-overlay" id="loading-overlay">
        <div class="loading-spinner"></div>
        <div class="loading-text">Connecting to room...</div>
    </div>

    <script>
        // Enhanced functionality
        let participantCount = 1;
        let isMuted = false;
        let isCameraOff = false;
        let isScreenSharing = false;

        // Update participant count
        function updateParticipantCount(count) {
            participantCount = count;
            document.getElementById('participant-count').textContent = count;
            
            // Update grid layout based on participant count
            const videoGrid = document.getElementById('video-grid');
            videoGrid.className = '';
            if (count === 1) videoGrid.classList.add('single-user');
            else if (count === 2) videoGrid.classList.add('two-users');
            else if (count === 3) videoGrid.classList.add('three-users');
            else if (count <= 4) videoGrid.classList.add('four-users');
        }

        // Enhanced video container creation
        function createVideoContainer(video, userName = 'Anonymous') {
            const container = document.createElement('div');
            container.className = 'video-container';
            
            const overlay = document.createElement('div');
            overlay.className = 'video-overlay';
            
            const userNameDiv = document.createElement('div');
            userNameDiv.className = 'user-name';
            userNameDiv.textContent = userName;
            
            const controls = document.createElement('div');
            controls.className = 'video-controls';
            
            const pinBtn = document.createElement('button');
            pinBtn.className = 'control-btn';
            pinBtn.innerHTML = '<i class="fas fa-thumbtack"></i>';
            pinBtn.title = 'Pin Video';
            
            const volumeBtn = document.createElement('button');
            volumeBtn.className = 'control-btn';
            volumeBtn.innerHTML = '<i class="fas fa-volume-up"></i>';
            volumeBtn.title = 'Mute/Unmute';
            
            controls.appendChild(pinBtn);
            controls.appendChild(volumeBtn);
            
            overlay.appendChild(userNameDiv);
            overlay.appendChild(controls);
            
            const statusIndicator = document.createElement('div');
            statusIndicator.className = 'status-indicator';
            
            const micDot = document.createElement('div');
            micDot.className = 'status-dot';
            micDot.title = 'Microphone On';
            
            statusIndicator.appendChild(micDot);
            
            container.appendChild(video);
            container.appendChild(overlay);
            container.appendChild(statusIndicator);
            
            return container;
        }

        // Control panel functionality
        document.getElementById('mic-toggle').addEventListener('click', function() {
            isMuted = !isMuted;
            this.classList.toggle('muted', isMuted);
            this.querySelector('i').className = isMuted ? 'fas fa-microphone-slash' : 'fas fa-microphone';
            this.title = isMuted ? 'Unmute Microphone' : 'Mute Microphone';
        });

        document.getElementById('camera-toggle').addEventListener('click', function() {
            isCameraOff = !isCameraOff;
            this.classList.toggle('off', isCameraOff);
            this.querySelector('i').className = isCameraOff ? 'fas fa-video-slash' : 'fas fa-video';
            this.title = isCameraOff ? 'Turn On Camera' : 'Turn Off Camera';
        });

        document.getElementById('screen-share').addEventListener('click', function() {
            isScreenSharing = !isScreenSharing;
            this.classList.toggle('active', isScreenSharing);
            this.querySelector('i').className = isScreenSharing ? 'fas fa-stop' : 'fas fa-desktop';
            this.title = isScreenSharing ? 'Stop Sharing' : 'Share Screen';
        });

        document.getElementById('leave-call').addEventListener('click', function() {
            if (confirm('Are you sure you want to leave the call?')) {
                window.location.href = '/';
            }
        });

        // Hide loading overlay after a delay (you'd integrate this with your actual connection logic)
        setTimeout(() => {
            document.getElementById('loading-overlay').style.display = 'none';
        }, 2000);

        // Copy room ID functionality
        document.getElementById('room-display').addEventListener('click', function() {
            navigator.clipboard.writeText(this.textContent.replace('Room: ', ''));
            // You could add a toast notification here
        });
    </script>
</body>
</html> 